[Unit]
Description=Process for collecting metrics and sending to IC Onchain Observability Canister
# We must wait for IC bootstrap to complete: It writes various
# state files and may also be needed to obtain network config.
After=bootstrap-ic-node.service
Wants=bootstrap-ic-node.service
# For creating the crypto component, this needs ic-crypto-csp service running.
After=ic-crypto-csp.service
Wants=ic-crypto-csp.service
StartLimitIntervalSec=0

[Service]
User=ic-replica
Environment=RUST_BACKTRACE=1
# When starting this service, ideally --replica-config-file would directly point to
# /run/ic-node/config/ic.json5, but this file may be not available yet as it is generated
# only on ExecStartPre by ic-replica.service. As a temporary workaround, we are generating
# an onchain-observability-adapter-service-specific version of ic.json5 of which only the parts related to crypto
# and registry are relevant. Then, we will merge this with adapter-specific-config to generate the full config
ExecStartPre=+/opt/ic/bin/generate-replica-config.sh -i /opt/ic/share/ic.json5.template -o /run/ic-node/config/onchain-observability-adapter-replica-config.json5
ExecStartPre=+/opt/ic/bin/generate-onchain-observability-adapter-config.sh -o /run/ic-node/config/onchain-observability-adapter-specific-config.json
ExecStart=/opt/ic/bin/ic-onchain-observability-adapter --adapter-specific-config-file /run/ic-node/config/onchain-observability-adapter-specific-config.json --replica-config-file /run/ic-node/config/onchain-observability-adapter-replica-config.json5
NotifyAccess=main
#TODO: once this service is complete, we can change to "always"
Restart=on-failure 

[Install]
WantedBy=ic-replica.service